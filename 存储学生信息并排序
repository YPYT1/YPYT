    public static void main(String[] args) throws IOException {
        TreeSet<Student> treeSet = new TreeSet<Student>(new Comparator<Student>() {
            @Override
            public int compare(Student s1, Student s2) {
                //主要条件
                int num = s2.get_sum() - s1.get_sum();
                //次要条件
                int num2 = num == 0 ? s1.getChinese() - s2.getChinese() : num;
                int num3 = num2 == 0 ? s1.getMath() - s2.getMath() : num2;
                int num4 = num3 == 0 ? s1.getName().compareTo(s2.getName()) : num3;
                return num4;
            }
        });
        //键盘录入学生信息 5次
        for (int i = 0; i < 5; i++) {
            Scanner scanner = new Scanner(System.in);
            System.out.println("请输入" + (i + 1) + "学生信息");
            System.out.println("姓名：");
            String name = scanner.nextLine();
            System.out.println("语文成绩：");
            int chinese = scanner.nextInt();
            System.out.println("数学成绩：");
            int math = scanner.nextInt();
            System.out.println("英语成绩：");
            int english = scanner.nextInt();

            Student s = new Student();
            s.setName(name);
            s.setChinese(chinese);
            s.setMath(math);
            s.setEnglish(english);

            treeSet.add(s);
        }

        BufferedWriter bw = new BufferedWriter(new FileWriter("D:\\idea file\\test\\copy"));

        for(Student s : treeSet){
            StringBuilder sb = new StringBuilder();
            sb.append(s.getName()).append(",").append(s.getChinese()).append(",").append(s.getMath()).append(",").append(s.getEnglish()).append(",").append(s.get_sum());
            bw.write(sb.toString());
            bw.newLine();
            bw.flush();
        }

        bw.close();
    }
